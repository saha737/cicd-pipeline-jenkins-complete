// build.gradle (Gradle 4.6 compatible)

buildscript {
    repositories {
        mavenCentral()
        jcenter()
        maven { url "https://plugins.gradle.org/m2/" }
    }
    dependencies {
        // Same plugin your job has been pulling
        classpath "com.moowork.gradle:gradle-node-plugin:1.2.0"
    }
}
 
apply plugin: "base"               // gives us clean/build lifecycle
apply plugin: "com.moowork.node"   // npm tasks

// We install Node in the Jenkins container; tell plugin not to download Node 9.x
node {
    download = false
}

// 1) npm install
task npmInstall(type: com.moowork.gradle.node.npm.NpmTask) {
    args = ["install", "--no-fund", "--no-audit"]
}

// 2) npm test (uses "test": "./node_modules/.bin/mocha")
task npmTest(type: com.moowork.gradle.node.npm.NpmTask) {
    args = ["test"]
}
npmTest.dependsOn npmInstall

// 3) Package the Node app into dist/trainSchedule.zip
task packageDist(type: Zip) {
    destinationDir = file("dist")
    archiveName = "trainSchedule.zip"

    // Include the app sources you need to run in a container
    from(".") {
        include "package.json", "package-lock.json"
        include "app.js"
        include "bin/**"
        include "routes/**"
        include "views/**"
        include "public/**"
        include "db.json"            // if your app uses lowdb file (remove if not present)
        exclude "node_modules/**"
        exclude ".git/**"
        exclude "dist/**"
    }
}
packageDist.dependsOn npmTest

// Make 'gradle build' produce the zip
build.dependsOn packageDist
